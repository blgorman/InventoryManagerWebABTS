// <auto-generated />
using System;
using EF10_InventoryDBLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF10_InventoryDBLibrary.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20250802153353_update-itemsbycategory-addcategoryfield")]
    partial class updateitemsbycategoryaddcategoryfield
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-preview.5.25277.114")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF10_InventoryModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Movie",
                            Description = "Film or motion picture",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Book",
                            Description = "Printed or written literary work",
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Game",
                            Description = "Interactive entertainment",
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Toy/Collectable",
                            Description = "Physical toy or collectible",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("EF10_InventoryModels.Contributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContributorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("ContributorName")
                        .IsUnique();

                    b.ToTable("Contributors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContributorName = "Harrison Ford",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            ContributorName = "Carrie Fisher",
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            ContributorName = "George Lucas",
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            ContributorName = "John Williams",
                            IsActive = true
                        },
                        new
                        {
                            Id = 5,
                            ContributorName = "J.R.R. Tolkien",
                            IsActive = true
                        },
                        new
                        {
                            Id = 6,
                            ContributorName = "Wargaming",
                            IsActive = true
                        },
                        new
                        {
                            Id = 7,
                            ContributorName = "Hallmark",
                            IsActive = true
                        },
                        new
                        {
                            Id = 8,
                            ContributorName = "Christian Bale",
                            IsActive = true
                        },
                        new
                        {
                            Id = 9,
                            ContributorName = "Katie Holmes",
                            IsActive = true
                        },
                        new
                        {
                            Id = 10,
                            ContributorName = "Christopher Nolan",
                            IsActive = true
                        },
                        new
                        {
                            Id = 11,
                            ContributorName = "Hans Zimmer",
                            IsActive = true
                        },
                        new
                        {
                            Id = 12,
                            ContributorName = "James Newton Howard",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("EF10_InventoryModels.DTOs.ItemByCategoryDTO", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ItemsByCategory", (string)null);
                });

            modelBuilder.Entity("EF10_InventoryModels.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("GenreName")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreName = "Science Fiction",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            GenreName = "Fantasy",
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            GenreName = "Adventure",
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            GenreName = "Classic",
                            IsActive = true
                        },
                        new
                        {
                            Id = 5,
                            GenreName = "Thriller",
                            IsActive = true
                        },
                        new
                        {
                            Id = 6,
                            GenreName = "Horror",
                            IsActive = true
                        },
                        new
                        {
                            Id = 7,
                            GenreName = "Mystery",
                            IsActive = true
                        },
                        new
                        {
                            Id = 8,
                            GenreName = "Action",
                            IsActive = true
                        },
                        new
                        {
                            Id = 9,
                            GenreName = "Drama",
                            IsActive = true
                        },
                        new
                        {
                            Id = 10,
                            GenreName = "Superhero",
                            IsActive = true
                        },
                        new
                        {
                            Id = 11,
                            GenreName = "Collectible",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("EF10_InventoryModels.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsOnSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedUserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PurchasedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SoldDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name", "CategoryId")
                        .IsUnique();

                    b.ToTable("Items", t =>
                        {
                            t.HasCheckConstraint("CK_Item_CurrentValue_NonNegative", "[CurrentValue] IS NULL OR [CurrentValue] >= 0");

                            t.HasCheckConstraint("CK_Item_PurchasePrice_NonNegative", "[PurchasePrice] IS NULL OR [PurchasePrice] >= 0");

                            t.HasCheckConstraint("CK_Item_Quantity_NonNegative", "[Quantity] >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedByUserId = "2fd28110-93d0-427d-9207-d55dbca680fa",
                            CreatedDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The original Star Wars movie.",
                            IsActive = true,
                            IsOnSale = false,
                            Name = "Star Wars: A New Hope",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedByUserId = "2fd28110-93d0-427d-9207-d55dbca680fa",
                            CreatedDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic fantasy novel by J.R.R. Tolkien.",
                            IsActive = true,
                            IsOnSale = false,
                            Name = "The Lord of the Rings: The Fellowship of the Ring",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedByUserId = "2fd28110-93d0-427d-9207-d55dbca680fa",
                            CreatedDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Popular online multiplayer tank game.",
                            IsActive = true,
                            IsOnSale = false,
                            Name = "World of Tanks",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedByUserId = "2fd28110-93d0-427d-9207-d55dbca680fa",
                            CreatedDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Collectible Hallmark ornament.",
                            IsActive = true,
                            IsOnSale = false,
                            Name = "Star Trek™: U.S.S. Enterprise: NCC-1701 Ornament",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedByUserId = "2fd28110-93d0-427d-9207-d55dbca680fa",
                            CreatedDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Christopher Nolan's Batman movie.",
                            IsActive = true,
                            IsOnSale = false,
                            Name = "Batman Begins",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("EF10_InventoryModels.ItemContributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContributorId")
                        .HasColumnType("int");

                    b.Property<string>("ContributorType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContributorId");

                    b.HasIndex("ItemId", "ContributorId")
                        .IsUnique();

                    b.ToTable("ItemContributors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContributorId = 1,
                            ContributorType = "Actor",
                            ItemId = 1
                        },
                        new
                        {
                            Id = 2,
                            ContributorId = 2,
                            ContributorType = "Actor",
                            ItemId = 1
                        },
                        new
                        {
                            Id = 3,
                            ContributorId = 3,
                            ContributorType = "Director",
                            ItemId = 1
                        },
                        new
                        {
                            Id = 4,
                            ContributorId = 4,
                            ContributorType = "Composer",
                            ItemId = 1
                        },
                        new
                        {
                            Id = 5,
                            ContributorId = 5,
                            ContributorType = "Author",
                            ItemId = 2
                        },
                        new
                        {
                            Id = 6,
                            ContributorId = 6,
                            ContributorType = "Publisher",
                            ItemId = 3
                        },
                        new
                        {
                            Id = 7,
                            ContributorId = 7,
                            ContributorType = "Manufacturer",
                            ItemId = 4
                        },
                        new
                        {
                            Id = 8,
                            ContributorId = 8,
                            ContributorType = "Actor",
                            ItemId = 5
                        },
                        new
                        {
                            Id = 9,
                            ContributorId = 9,
                            ContributorType = "Actor",
                            ItemId = 5
                        },
                        new
                        {
                            Id = 10,
                            ContributorId = 10,
                            ContributorType = "Director",
                            ItemId = 5
                        },
                        new
                        {
                            Id = 11,
                            ContributorId = 11,
                            ContributorType = "Composer",
                            ItemId = 5
                        },
                        new
                        {
                            Id = 12,
                            ContributorId = 12,
                            ContributorType = "Composer",
                            ItemId = 5
                        });
                });

            modelBuilder.Entity("ItemGenres", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("ItemGenres");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            ItemId = 1,
                            GenreId = 8
                        },
                        new
                        {
                            ItemId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            ItemId = 2,
                            GenreId = 3
                        },
                        new
                        {
                            ItemId = 2,
                            GenreId = 4
                        },
                        new
                        {
                            ItemId = 3,
                            GenreId = 8
                        },
                        new
                        {
                            ItemId = 4,
                            GenreId = 11
                        },
                        new
                        {
                            ItemId = 5,
                            GenreId = 8
                        },
                        new
                        {
                            ItemId = 5,
                            GenreId = 9
                        },
                        new
                        {
                            ItemId = 5,
                            GenreId = 10
                        });
                });

            modelBuilder.Entity("EF10_InventoryModels.Item", b =>
                {
                    b.HasOne("EF10_InventoryModels.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EF10_InventoryModels.ItemContributor", b =>
                {
                    b.HasOne("EF10_InventoryModels.Contributor", "Contributor")
                        .WithMany("ItemContributors")
                        .HasForeignKey("ContributorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF10_InventoryModels.Item", "Item")
                        .WithMany("ItemContributors")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contributor");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ItemGenres", b =>
                {
                    b.HasOne("EF10_InventoryModels.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF10_InventoryModels.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF10_InventoryModels.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EF10_InventoryModels.Contributor", b =>
                {
                    b.Navigation("ItemContributors");
                });

            modelBuilder.Entity("EF10_InventoryModels.Item", b =>
                {
                    b.Navigation("ItemContributors");
                });
#pragma warning restore 612, 618
        }
    }
}
